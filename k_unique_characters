Have the function KUniqueCharacters(str) take the str parameter 
being passed and find the longest substring that contains k 
unique characters, where k will be the first character from 
the string. The substring will start from the second position 
in the string because the first character will be the integer 
k. For example: if str is "2aabbacbaa" there are several 
substrings that all contain 2 unique characters, namely: 
["aabba", "ac", "cb", "ba"], but your program should return 
"aabba" because it is the longest substring. If there are 
multiple longest substrings, then return the first substring 
encountered with the longest length. k will range from 1 to 6.

def KUniqueCharacters(str)
	longest_sub_string, uniq_count, string = "", str[0].to_i, str[1..-1]
	cons_i = 0
	while cons_i < string.length
		cons_i.upto(str.length-1).each do |sub|
			if string[cons_i..sub].chars.uniq.length == uniq_count and string[cons_i..sub].length > longest_sub_string.length
				longest_sub_string = string[cons_i..sub]
			end
		end
		cons_i += 1 
	end
	longest_sub_string
end
