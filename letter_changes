Using the Ruby language, have the function LetterChanges(str) take the str parameter 
being passed and modify it using the following algorithm. Replace every letter in the 
string with the letter following it in the alphabet (ie. c becomes d, z becomes a). Then 
capitalize every vowel in this new string (a, e, i, o, u) and finally return this modified string. 

Sample Test Cases
Input:"hello*3"
Output:"Ifmmp*3"

Input:"fun times!"
Output:"gvO Ujnft!"

def LetterChanges(str)
    vowels = "aeiouAEIOU"
    alphabet = ("a".."z").to_a
    (0...str.length).each do |i|
        current_letter = str[i]
        next_index = (i + 1) % 25 
        next_letter = str[next_index]
        if vowels.include?(next_letter)
            current_letter = next_letter.upcase
        elsif alphabet.include?(current_letter)
            current_letter = next_letter
        end
    end
    str
end

1. Specs 

2. Consider the process 

3. In Plain English 
  1. Create alphabet array 
  2. Create final variabe and map through string 
  3. If alphabet.include?(letter), the index over by one, use modulo
  4. If the character is included in "aeiou", upcase
  5. Else, proceed with existing character
  6. return array and join
4. Translate to code

def LettersChange(str)
  alphabet = ("a".."z").to_a
  modified_str = str.each_char.map do |letter|
    if alphabet.include? letter 
      current_index = alphabet.index(letter)
      modified_letter = alphabet[current_index.next % 26]
      modified_letter =~ /[aeiou]/ ? modified_letter.upcase : modified_letter
    else 
      letter
    end
  end
  modified_str.join("")
end

def LettersChange(str)
  
  str = str.gsub(/[a-zA-Z]/) do |letter|
    if letter == "z" or letter == "Z"
      "a"
    else 
      (letter.ord + 1).chr
    end
  end 
  str.tr("aeiou", "AEIOU")
end

LettersChange("helloz")



