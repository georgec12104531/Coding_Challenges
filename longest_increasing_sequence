Have the function LongestIncreasingSequence(arr) take the array of 
positive integers stored in arr and return the length of the longest 
increasing subsequence (LIS). A LIS is a subset of the original list 
where the numbers are in sorted order, from lowest to highest, and are 
in increasing order. The sequence does not need to be contiguous or unique,
and there can be several different subsequences. For example: if arr is 
[4, 3, 5, 1, 6] then a possible LIS is [3, 5, 6], and another is [1, 6]. 
For this input, your program should return 3 because that is the length 
of the longest increasing subsequence. 

def LongestIncreasingSequence(arr)
	combo_breakers = []
	final_array = []
	(1..arr.length).each do |i|
		combo_breakers << arr.combination(i).to_a
	end
	combo_breakers.each do |combo_array|
		combo_array.select do |combo|
			combo = combo.uniq
			final_array << combo if combo == combo.sort
		end
	end
		the_one = final_array.max_by {|combo| combo.length}
		the_one.length
end
   
