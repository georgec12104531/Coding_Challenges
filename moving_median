Have the function MovingMedian(arr) read the array of 
numbers stored in arr which will contain a sliding 
window size, N, as the first element in the array and 
the rest will be a list of numbers. Your program should 
return the Moving Median for each element based on the 
element and its N-1 predecessors, where N is the sliding 
window size. The final output should be a string with 
the moving median corresponding to each entry in the 
original array separated by commas. 

Note that for the first few elements (until the window 
size is reached), the median is computed on a smaller 
number of entries. For example: if arr is [3, 1, 3, 5, 10, 6, 4, 3, 1] 
then your program should output "1,2,3,5,6,6,4,3" 

def calc_median(arr)
	median = 0 
	arr = arr.sort
	if arr.length.even?
		return median = (arr[arr.length / 2 - 1] + arr[arr.length / 2]) / 2
	else 
		return arr[arr.length / 2]
	end
end

def MovingMedian(arr)
	window, actual_array = (arr[0] - 1), arr[1..-1]
	final_array = (0..actual_array.length-1).map do |i|
 
		starting_index = [i - window, 0].max
		
		calc_median(actual_array[starting_index..i])
	end
	final_array.join(",")
end
